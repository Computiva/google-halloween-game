{"version":3,"sources":["webpack:///webpack/bootstrap e9a73dc816189118d456","webpack:///./src/index.ts","webpack:///./src/Game.ts","webpack:///./src/lib/AudioManager.ts","webpack:///./src/states/Boot.ts","webpack:///./src/core/state/State.ts","webpack:///./src/states/Preloader.ts","webpack:///./src/states/GameLevel.ts","webpack:///./src/players/Player.ts","webpack:///./src/core/sprite/Sprite.ts","webpack:///./src/core/Utils.ts","webpack:///./src/lib/LineBuilder.ts","webpack:///./src/lib/LifeFigure.ts","webpack:///./src/levels/Level1.ts","webpack:///./src/core/Level.ts","webpack:///./src/ghosts/Fresher.ts","webpack:///./src/core/sprite/Ghost.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9a73dc816189118d456","/// <reference path=\"../node_modules/phaser/typescript/phaser.d.ts\" />\n/// <reference path=\"../node_modules/phaser/typescript/pixi.d.ts\" />\n/// <reference path=\"../definitions/definitions.d.ts\" /> //通用声明\n\n// //引入全局性的库，将暴露出PIXI,P2这种全局变量\n// import 'pixi';\n// import 'p2';\n// import 'phaser';\n\nimport Game from './Game';\n\nwindow.onload = () => {\n  new Game().run();\n};\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import AudioManager from './lib/AudioManager';\n//基本场景\nimport Boot from './states/Boot';\nimport Preloader from './states/Preloader';\n//引入关卡管理\nimport GameLevel from './states/GameLevel';\n//主角\nimport Player from './players/Player';\n\n/**\n * 游戏入口对象\n */\nclass Game extends Phaser.Game {\n\n  audio: AudioManager; //全局唯一的音效管理（将在Preloader处进行进一步初始化和加载）\n\n  constructor() {\n    super(640, 360, Phaser.AUTO, 'content');\n    // super(1000, 360, Phaser.AUTO, 'content');\n    //音效管理\n    this.audio = new AudioManager(this);\n    //基本场景\n    this.state.add('Boot', Boot);\n    this.state.add('Preloader', Preloader);\n    //游戏关卡\n    this.state.add('GameLevel', GameLevel);\n  }\n\n  //开始游戏\n  run() {\n    this.state.start('Boot');\n  }\n\n  // //析构所有游戏资源\n  // destruct() {\n  //   //TODO\n  // }\n\n}\n\nexport default Game;\n\n\n// WEBPACK FOOTER //\n// ./src/Game.ts","/**\n * 管理整个游戏的全局音效\n */\nclass AudioManager {\n\n  static ComboEffect = { //[全局]合成音效配置\n    'level-success': ['level-success-0', 'level-success-1', 'level-success-2']\n  };\n\n  game: Phaser.Game;\n  effectAudio: Phaser.Sound; //音效\n  bgAudio: Phaser.Sound; //背景音乐\n\n  //施法音效\n  private drawAudio = ['draw-1', 'draw-2', 'draw-3', 'draw-4'];\n  private drawAudioIndex = 0; //标记当前施法音效（若施法间隔超过1秒，则此值会置为0，表示从头开始）\n  private drawAudioTimer = null; //用于记录施法间隔，便于清零\n\n  constructor(game: Phaser.Game) {\n    this.game = game;\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 对外调用api\n  -------------------------------------------------------------\n  */\n\n  //播放背景音乐\n  playBg(play: boolean = true): void {\n    play ? this.bgAudio.play('bg') : this.bgAudio.stop();\n  }\n\n  //播放指定音效\n  async playEffect(name: string) {\n    if (!name) { this.effectAudio.stop(); return ; } //停止播放\n    //是否是合成音效\n    let combo = AudioManager.ComboEffect[name];\n    if (combo) { //合成音效按顺序播放\n      // return combo.reduce((sofar, marker) => {\n      //   return sofar.then(() => {\n      //     return new Promise((resolve) => {\n      //       this.effectAudio.play(marker).onStop.addOnce(resolve);\n      //     });\n      //   });\n      // }, Promise.resolve());\n      for (let marker of combo) {\n        await new Promise((resolve) => this.effectAudio.play(marker).onStop.addOnce(resolve));\n      }\n    } else { //基本独立音效，直接播放\n      await new Promise((resolve) => this.effectAudio.play(name).onStop.addOnce(resolve)); //注：若连续两次调用同一个marker，那么addOnce添加的两个事件，会在第二个marker完成时一起触发\n    }\n  }\n\n  //播放施法音效\n  playDraw() {\n    if (this.drawAudioTimer) { this.game.time.events.remove(this.drawAudioTimer); } //连续施法时，延长时间\n    if (this.drawAudioIndex >= this.drawAudio.length) { this.drawAudioIndex = 0; } //超出时恢复到起始位置\n    this.effectAudio.play(this.drawAudio[this.drawAudioIndex++]); //按顺序播放施法音效\n    this.drawAudioTimer = this.game.time.events.add(2000, () => { //计时清零\n      this.drawAudioTimer = null;\n      this.drawAudioIndex = 0;\n    });\n  }\n\n  //播放失败结束\n  playFail() {\n    this.bgAudio.stop();\n    this.effectAudio.play('player-fail');\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 流程相关\n  -------------------------------------------------------------\n  */\n\n  //预下载音频文件（需要手动被外界调用）\n  preload() {\n    this.game.load.audio('main', 'assets/audios/main.ogg');\n  }\n\n  //创建音频对象（需要手动被外界调用）\n  create() {\n    //---主音效\n    let main = this.effectAudio = this.game.add.audio('main');\n    main.allowMultiple = true;\n    //player\n    main.addMarker('player-run', 19, 1.7, 1, true); //跑动\n    main.addMarker('player-fail', 27.5, 3); //死亡，失败结束\n\n    main.addMarker('ghost-die-1', 0, 3);\n    main.addMarker('ghost-die-2', 4, 3);\n    main.addMarker('ghost-die-3', 8, 4);\n    main.addMarker('ghost-die-4', 13, 6);\n    \n    main.addMarker('victory-cheer', 21.5, 5);\n    \n    // main.addMarker('bg-music', 31.25, 25.25, 0.1, true);\n    main.addMarker('fresher-attack-disappear', 57.5, 1.7);\n    main.addMarker('ghost-normal-die', 60.2, 1.2);\n    main.addMarker('ghost-laugh', 62.5, 1.9);\n    main.addMarker('unknown', 70.2, 1.5);\n\n    //施法音效，若画线间隔不到1秒，则会连续从1-4播放，若间隔较大，则从头开始\n    main.addMarker('draw-1', 72.2, 1.5);\n    main.addMarker('draw-2', 74.4, 1.5);\n    main.addMarker('draw-3', 76.5, 1.5);\n    main.addMarker('draw-4', 79, 1.5);\n\n    //每关结束时连续播放的（注：由于需要连续播放，所以将其部分裁剪掉）\n    main.addMarker('level-success-0', 65.5, 0.6); //实际完整的是 65.5, 1.5\n    main.addMarker('level-success-1', 83.7, 0.8); //实际完整的是 83.8, 1.8\n    main.addMarker('level-success-2', 81.5, 1.8);\n    \n    //施法特效\n    main.addMarker('heart', 86.2, 1.8); //桃心\n    main.addMarker('lightning', 88.8, 2.8); //闪电\n\n    //背景音乐\n    let bg = this.bgAudio = this.game.add.audio('main');\n    bg.addMarker('bg', 31.25, 25.25, 0.6, true);\n  }\n\n  //[TEST]在界面上显示测试按钮\n  makeTestButtons() {\n    Object.keys(this.effectAudio.markers).concat('bg').forEach((name, index) => makeButton.call(this, name, 510, 10 + index * 24));\n    this.playEffect('level-success'); //test\n    //////\n    function makeButton(name, x, y) {\n        var button = this.game.add.button(x, y, 'button', () => {\n          if ('bg' === name) {\n            this.playBg();\n          } else {\n            this.playEffect(name);\n          }\n        }, null, 0, 1, 2);\n        // button.smoothed = false;\n        var text = this.game.add.text(x, y + 2, name, { font: 'Arial', fontSize: 12 });\n        text.x += (button.width / 2) - (text.width / 2);\n    }\n  }\n\n}\n\nexport default AudioManager;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/AudioManager.ts","import State from '../core/state/State';\n\n/**\n * 游戏初始化，设置相关配置\n */\nclass Boot extends State {\n\n  init() {\n    let game = this.game, scale = this.game.scale;\n    //目前仅有一个触点\n    this.input.maxPointers = 1;\n    scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    // //切换窗口时禁止游戏暂停\n    // this.stage.disableVisibilityChange = true;\n    if (game.device.desktop) { //处于桌面环境\n      //debug\n      scale.scaleMode = Phaser.ScaleManager.NO_SCALE; //调整为正常模式\n    } else { //手机端环境\n      //强制让用户调整方向后才能继续\n      scale.forceOrientation(true, false);\n      scale.enterIncorrectOrientation.add(() => {\n        console.log('------当前手机方向错误，需要调整，这里暂停游戏');\n        game.paused = true;\n      });\n      scale.leaveIncorrectOrientation.add(() => {\n        console.log('------手机方向已经调整正确，可以继续游戏');\n        game.paused = false;\n      });\n    }\n    //默认背景\n    game.stage.setBackgroundColor('0xCCCCCC');\n  }\n\n  preload() {\n    //加载进度条背景等资源，用于Preloader这个场景\n  }\n\n  create() {\n    //进度条加载完毕后，切换到Preloader场景\n    this.state.start('Preloader');\n  }\n\n}\n\nexport default Boot;\n\n\n// WEBPACK FOOTER //\n// ./src/states/Boot.ts","import Game from '../../Game';\n\nconst IMAGE_FOLDER = 'assets/images'; //图片所在web目录\n\n/**\n * state基类，用于实现不同场景\n */\nabstract class State extends Phaser.State {\n\n  state: Phaser.StateManager; //phaser.d.ts里面没有描述这个属性，但这里属性是存在的。。。\n  game: Game; //[重新声明]该game已变为我们自定义的Game类\n  \n  //加载多个atlas，键名为定义的资源名，值为加载所在assets/images下的文件名（不含后缀，后缀必须为.png和.json，且是JSONArray格式）\n  loadAtlases(atlases: Object) {\n    for (let key in atlases) {\n      let filename = atlases[key];\n      this.game.load.atlasJSONArray(key, `${IMAGE_FOLDER}/${filename}.png`, `${IMAGE_FOLDER}/${filename}.json`);\n    }\n  }\n\n}\n\nexport default State;\n\n\n// WEBPACK FOOTER //\n// ./src/core/state/State.ts","import State from '../core/state/State';\n\n/**\n * [场景]开始前的加载\n */\nclass Preloader extends State {\n\n  private ready: boolean = false; //标记是否已全部加载完毕\n\n  preload() {\n    //显示 背景、加载进度条\n    //TODO\n\n    //加载各种资源（图片、音频）\n    //[音频]\n    this.game.audio.preload();\n    //[atlas]\n    this.loadAtlases({\n      //[杂项]\n      'Misc': 'misc',\n      //[背景图片]\n      'Background': 'background',\n      //[Player]\n      'Player': 'player',\n      //[Ghost/Fresher]\n      'GhostFresher': 'ghost-fresher'\n    });\n\n    //测试按钮\n    this.game.load.spritesheet('button', 'assets/images/flixel-button.png', 80, 20)\n  }\n\n  create() {\n    //音频创建\n    this.game.audio.create();\n    //开启第一关\n    this.state.start('GameLevel');\n  }\n\n  update() {\n    //\tYou don't actually need to do this, but I find it gives a much smoother game experience.\n\t\t//\tBasically it will wait for our audio file to be decoded before proceeding to the MainMenu.\n\t\t//\tYou can jump right into the menu if you want and still play the music, but you'll have a few\n\t\t//\tseconds of delay while the mp3 decodes - so if you need your music to be in-sync with your menu\n\t\t//\tit's best to wait for it to decode here first, then carry on.\n\t\t\n\t\t//\tIf you don't have any music in your game then put the game.state.start line into the create function and delete\n\t\t//\tthe update function completely.\n    // if (!this.ready && this.cache.isSoundDecoded('xxxMusic')) {\n    //   this.ready = true;\n    //   this.state.start('GameLevelOne');\n    // }\n  }\n\n}\n\nexport default Preloader;\n\n\n// WEBPACK FOOTER //\n// ./src/states/Preloader.ts","import State from '../core/state/State';\nimport Player from '../players/Player';\n//关卡\nimport Level from '../core/Level';\nimport Level1 from '../levels/Level1';\n\n/**\n * 游戏关卡管理器（控制关卡的生成和切换）\n */\nclass GameLevel extends State {\n\n  score: number = 0; //当前总得分\n  player: Player; //游戏唯一主角\n  background: Phaser.Image; //背景图\n  blackMask: Phaser.Graphics; //场景切换黑幕遮罩\n\n  //关卡顺序\n  levels = [\n    Level1 //第一关\n  ];\n  //当前关卡索引\n  currentIndex: number = -1;\n  currentLevel: Level = null;\n\n  /*\n  -------------------------------------------------------------\n  | 流程相关\n  -------------------------------------------------------------\n  */\n\n  //创建初始对象\n  create() {\n    //全局背景图\n    this.background = this.game.add.image(0, 0, 'Background');\n    this.background.visible = false; //默认隐藏\n    //主角\n    this.player = new Player(this.game);\n    //黑幕\n    this.blackMask = this.game.add.graphics(0, 0);\n    this.blackMask.visible = false;\n    this.blackMask.beginFill();\n    this.blackMask.drawRect(0, 0, this.game.width + 100, this.game.height);\n    this.blackMask.endFill();\n    this.blackMask.data.reachLeftCallback = null; //到达左边界的callback\n    //开始第一关\n    this.startNext();\n\n    //---test\n    //音频按钮\n    // this.game.audioManager.makeTestButtons();\n    //十字交叉线\n    this.drawCrossLine();\n  }\n\n  update() {\n    //移动黑幕并检测位置\n    this.moveMaskAndCheck();\n  }\n\n  render() {\n    let pointer = this.game.input.activePointer, debug = this.game.debug;\n    debug.text(`当前鼠标位置: ${pointer.x}, ${pointer.y}`, 10, 20, '0x000000');\n    //调用关卡的render()\n    if (this.currentLevel) { this.currentLevel.render(); }\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 内部工具\n  -------------------------------------------------------------\n  */\n\n  //开始下一关\n  async startNext() {\n    //创建下一关对象\n    let levelClass = this.levels[++this.currentIndex];\n    if (levelClass) {\n      this.currentLevel = new levelClass(this);\n      //设置player的攻击对象\n      this.player.setGhostGroup(this.currentLevel.ghosts);\n      //场景切换，过场动画\n      await this.playCutscene();\n      //创建ghosts\n      this.currentLevel.setupGhosts();\n    }\n  }\n\n  //播放过场动画（用于两个场景之间衔接）\n  async playCutscene() {\n    //主角从当前位置往右跑到边界\n    await this.player.runTo({ x: this.game.width + 100, y: this.player.y });\n    //开始移动黑幕（待黑幕到达左边界后）\n    await this.startMask();\n    console.log('----黑幕到达左边界');\n    //将主角x坐标设为0，并继续往右跑，直到舞台中央（此处过场动画结束）\n    this.player.x = -120;\n    //布置场景\n    this.currentLevel.setupScene();\n    //播放背景音乐\n    this.game.audio.playBg();\n    //主角移动到中央\n    await this.player.runTo({ x: this.game.width / 2 + this.player.body.width / 2, y: this.player.y });\n\n    // this.game.paused = true;\n  }\n\n  //黑幕相关\n  //开始移动黑幕（黑幕达到左边界后，此promise就将返回）\n  startMask() {\n    //重置以便重新开始\n    this.blackMask.x = this.game.width;\n    this.blackMask.visible = true;\n    return new Promise((resolve) => {\n      this.blackMask.data.reachLeftCallback = resolve;\n    });\n  }\n  moveMaskAndCheck() {\n    let mask = this.blackMask;\n    if (mask.visible) {\n      if (mask.x <= -(mask.width)) { //整体结束\n        mask.visible = false; //隐藏黑幕，移动结束\n      } else { //继续移动\n        let callback = mask.data.reachLeftCallback;\n        if (mask.x <= 0 && callback) { //已到达左边界，执行回调\n          console.log('----reachLeftCallback执行了一次');\n          mask.data.reachLeftCallback = null; //清理\n          callback();\n        }\n        mask.x -= 12; //向左移动\n      }\n    }\n  }\n\n  /*\n  -------------------------------------------------------------\n  | test/debug\n  -------------------------------------------------------------\n  */\n\n  //在界面上画出中心点的十字交叉线\n  drawCrossLine() {\n    let\n      pallete = this.game.add.bitmapData(this.game.width, this.game.height),\n      ctx = pallete.ctx;\n    pallete.addToWorld();\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 1;\n    ctx.moveTo(this.game.width/2, 0);\n    ctx.lineTo(this.game.width/2, 1000);\n    ctx.moveTo(0, this.game.height/2);\n    ctx.lineTo(1000, this.game.height/2);\n    ctx.stroke();\n  }\n\n}\n\nexport default GameLevel;\n\n\n// WEBPACK FOOTER //\n// ./src/states/GameLevel.ts","import Sprite from '../core/sprite/Sprite';\nimport Ghost from '../core/sprite/Ghost';\nimport { Point, Utils } from '../core/Utils';\nimport { LineBuilder } from '../lib/LineBuilder';\nimport { LifeFigureValue, LifeFigureMap } from '../lib/LifeFigure';\n\nclass Player extends Sprite {\n  \n  private processor: LineBuilder = null; //当前画线处理器，用于记录每次画线的线段（有值则代表当前正处于画线中）\n  private pallete: Phaser.BitmapData; //画板对象，用于画线\n  private ghosts: Phaser.Group; //存放当前关卡的所有ghosts（每过一关都可能被替换）\n\n  constructor(game: Phaser.Game) {\n    super({\n      game: game,\n      x: game.width / 2, y: game.height / 2,\n      // x: 0, y: 0,\n      key: 'Player', maxHealth: 4, speed: Player.defaultRate * 6,\n      // bodySize: { width: 87, height: 74 }\n      bodySize: { width: 87, height: 74, offsetX: 44, offsetY: 76 }\n      // bodySize: { width: 190, height: 170, offsetX: 0, offsetY: 0 }\n    });\n    // this.body.immovable = true;\n    // //位置调整\n    // this.anchor.setTo(0.46, 0.65);\n    //创建画板\n    this.pallete = this.createPallete();\n    //播放初始动画\n    this.play('waiting');\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 对外api\n  -------------------------------------------------------------\n  */\n\n  //设置当前可攻击的ghost对象Group\n  setGhostGroup(ghosts: Phaser.Group) {\n    this.ghosts = ghosts;\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 动作\n  -------------------------------------------------------------\n  */\n\n  onBeforeHurt() {\n    return this.exPlay('hurt');\n  }\n\n  async die() { //重写die\n    //让所有ghost逐渐淡出消失\n    //TODO\n    //播放失败音效\n    this.game.audio.playFail();\n    //播放死亡动画\n    await this.exPlay('die');\n    //等待若干秒后，显示结束失败场景\n    this.game.time.events.add(Phaser.Timer.SECOND * 10, () => {\n      alert('TODO:此时应该跳转到失败场景');\n    })\n  }\n\n  //移动到指定地方（并播放跑步动画和声音）\n  async runTo(target: Sprite|Coordinate) {\n    this.playRun();\n    await this.moveTo(target);\n    this.playRun(false); //恢复正常状态\n  }\n\n  //对ghost实施攻击\n  attack(figure: LifeFigureValue) {\n    if (null === figure) { //本次施法失败，停止施法动作\n      this.play('waiting');\n      return ;\n    }\n    this.playDrawAnimation(figure); //播放施法动画\n    this.playDrawAudio(figure); //播放施法音效\n    if (this.ghosts && this.ghosts.length) {\n      console.log(this.ghosts);\n      this.damageGhosts(figure);\n    }\n  }\n\n  //通过figure寻找ghost，找到一个立即返回（主要用于闪电）\n  private findGhostByFigure(figure: LifeFigureValue): Ghost|null {\n    for (let i = 0, len = this.ghosts.children.length; i < len; i++) {\n      let ghost = <Ghost>this.ghosts.children[i];\n      if (ghost.alive && ghost.getCurrentFigure() === figure) { return ghost; }\n    }\n    return null;\n  }\n\n  //对单个ghost施法\n  private damageGhosts(figure: LifeFigureValue) {\n    //若是闪电并且ghost中有一个带有闪电图形，则所有ghost减血\n    if (LifeFigureValue.LIGHTNING === figure) {\n      if (this.findGhostByFigure(figure)) {\n        this.ghosts.forEachAlive((ghost) => (<Ghost>ghost).hurt(false), null);\n      }\n    } else { //其他情况，按匹配减血\n      this.ghosts.forEachAlive((ghost: Ghost) => {\n        let isMatched = ghost.getCurrentFigure() === figure;\n        if (isMatched) {\n          if (LifeFigureValue.HEART === figure) { //将player加一滴血\n            this.cure();\n          }\n          //该ghost减血\n          ghost.hurt(false);\n        }\n      }, null);\n    }\n  }\n\n  //针对不同figure，播放不同音效\n  private playDrawAudio(figure: LifeFigureValue) {\n    switch(figure) {\n      case LifeFigureValue.LIGHTNING:\n        this.game.audio.playEffect('lightning');\n        break;\n      case LifeFigureValue.HEART:\n        this.game.audio.playEffect('heart');\n        break;\n      default:\n        this.game.audio.playDraw();\n    }\n  }\n  private playDrawAnimation(figure: LifeFigureValue) {\n    this.play(`draw-${LifeFigureMap[figure]}`);\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 画板\n  -------------------------------------------------------------\n  */\n\n  //创建画板对象\n  private createPallete(): Phaser.BitmapData {\n    let\n      pointer = this.game.input.activePointer,\n      pallete = this.game.add.bitmapData(this.game.width, this.game.height),\n      ctx = pallete.ctx;\n\n    pallete.addToWorld();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n    ctx.lineWidth = 20;\n    ctx.lineCap = ctx.lineJoin = 'round';\n\n    let pointGap = 0; //ctx.lineWidth / 2;\n    //[事件]鼠标按下\n    this.game.input.onDown.add(() => {\n      this.play('drawing'); //播放施法中动画\n      this.processor = new LineBuilder(ctx.lineWidth); //新的一个画线开始\n      this.processor.addPoint(this.getActivePoint(pointGap)); //一个开始的坐标点\n    });\n    //[事件]鼠标移动\n    this.game.input.addMoveCallback(() => {\n      if (this.processor) {\n        this.processor.addPoint(this.getActivePoint(pointGap)); //加入移动时的坐标点\n        \n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); //清空画板，重新绘制以前的画线\n        //---开始重新绘制画板，显示已画的线段图形\n        let points = this.processor.getPoints(), p1: Point = points[0], p2: Point = points[1], middlePoint: Point;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y); //移动到起始点\n        for (let i = 1, len = points.length; i < len; i++) {\n          middlePoint = Point.getMiddlePoint(p1, p2); //we pick the point between pi+1 & pi+2 as the end point and p1 as our control point\n          ctx.quadraticCurveTo(p1.x, p1.y, middlePoint.x, middlePoint.y); //draw a curve line to the middle\n          p1 = points[i], p2 = points[i + 1];\n        }\n        ctx.lineTo(p1.x, p1.y); // Draw last line as a straight line while we wait for the next point to be able to calculate the bezier control point\n        ctx.stroke();\n\n        this.processor.calculate(); //执行一次线段计算\n        //debug 绘制所有线段及其信息\n        this.processor.drawDebugInfo(pallete);\n        //debug end\n\n        pallete.dirty = true; //标记该bitmap对象已脏，需要重绘\n      }\n    }, null);\n    //[事件]鼠标抬起\n    this.game.input.onUp.add(() => {\n      if (this.processor) { //由于及时没有产生ondown事件，鼠标从外面移入游戏中时，也会触发onup，所以这里需要判断下\n        //计算最终画线结果\n        this.processor.calculate(true);\n        //计算当前图形\n        let figure = this.processor.calculateFigure();\n        //实施攻击\n        this.attack(figure);\n\n        //debug\n        console.log('----画线完毕: ', this.processor);\n        //debug 绘制所有线段及其信息\n        this.processor.drawDebugInfo(pallete);\n        //debug end\n        this.processor = null;\n      }\n    });\n    return pallete;\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 动画及音频\n  -------------------------------------------------------------\n  */\n\n  //初始化创建动画\n  protected initializeAnimations() {\n    let animations = this.animations, frameRate = Sprite.defaultRate; //默认频率\n    //等待状态\n    animations.add('waiting', Utils.concatRepeat([], 'waiting/1', 25, 'waiting/2', 5, 'waiting/3', 5, 'waiting/4', 4, 'waiting/5', 5, 'waiting/6', 15, 'waiting/5', 6, 'waiting/4', 5, 'waiting/3', 5, 'waiting/2', 5, 'waiting/1', 10, 'waiting/7', 5, 'waiting/8', 5, 'waiting/9', 5, 'waiting/10', 5, 'waiting/11', 15, 'waiting/10', 5, 'waiting/9', 5, 'waiting/8', 5, 'waiting/7', 5), frameRate, true);\n    //跑动\n    animations.add('run', Utils.concatRepeat([], 'run/1', 5, 'run/2', 5, 'run/3', 4, 'run/4', 5, 'run/5', 5, 'run/6', 5), frameRate, true);\n    //scared状态\n    animations.add('scared', Utils.concatRepeat([], 'scared/1', 5, 'scared/2', 5, 'scared/3', 1), frameRate, false);\n    //施法中状态\n    animations.add('drawing', Utils.concatRepeat([], 'drawing/1', 5, 'drawing/2', 5, 'drawing/3', 4, 'drawing/4', 5, 'drawing/5', 5, 'drawing/6', 5), frameRate, true);\n    //画横线（结束后需立马跳转到waiting）\n    let drawHorizontal = animations.add('draw-horizontal', Utils.concatRepeat([], 'draw-horizontal/1', 8, 'draw-horizontal/2', 6, 'draw-horizontal/3', 5, 'draw-horizontal/4', 5, 'draw-horizontal/5', 5), frameRate, false);\n    drawHorizontal.onComplete.add(() => { console.log('-----drawHorizontal on complete'); animations.play('waiting'); });\n    //画竖线\n    let drawVertical = animations.add('draw-vertical', Utils.concatRepeat([], 'draw-vertical/1', 5, 'draw-vertical/2', 5, 'draw-vertical/3', 5, 'draw-vertical/4', 5, 'draw-vertical/5', 5), frameRate, false);\n    drawVertical.onComplete.add(() => animations.play('waiting'));\n    //画上凸bugle\n    let drawBugle = animations.add('draw-bugle', Utils.concatRepeat([], 'draw-bugle/1', 9, 'draw-bugle/2', 5, 'draw-bugle/3', 5, 'draw-bugle/4', 5, 'draw-bugle/5', 5), frameRate, false);\n    drawBugle.onComplete.add(() => animations.play('waiting'));\n    //画下凹sunken\n    let drawSunken = animations.add('draw-sunken', Utils.concatRepeat([], 'draw-sunken/1', 9, 'draw-sunken/2', 5, 'draw-sunken/3', 5, 'draw-sunken/4', 5, 'draw-sunken/5', 5), frameRate, false);\n    drawSunken.onComplete.add(() => animations.play('waiting'));\n    //画闪电lightning\n    let drawLightning = animations.add('draw-lightning', Utils.concatRepeat([], 'draw-lightning/1', 10, 'draw-lightning/2', 4, 'draw-lightning/3', 5, 'draw-lightning/4', 5, 'draw-lightning/5', 5), frameRate, false);\n    drawLightning.onComplete.add(() => animations.play('waiting'));\n    //画桃心heart\n    let drawHeart = animations.add('draw-heart', Utils.concatRepeat([], 'draw-heart/1', 9, 'draw-heart/2', 5, 'draw-heart/3', 5, 'draw-heart/4', 5, 'draw-heart/5', 5), frameRate, false);\n    drawHeart.onComplete.add(() => animations.play('waiting'));\n    //受伤hurt\n    let hurt = animations.add('hurt', Utils.concatRepeat([], 'hurt/1', 4, 'hurt/2', 5, 'hurt/3', 5, 'hurt/4', 7), frameRate, false);\n    hurt.onComplete.add(() => animations.play('waiting'));\n    //胜利victory\n    animations.add('victory', Utils.concatRepeat([], 'victory/1', 9, 'victory/2', 5, 'victory/3', 5, 'victory/4', 5, 'victory/5', 5, 'victory/6', 5, 'victory/7', 5, 'victory/8', 5, 'victory/9', 5, 'victory/10', 5, 'victory/11', 5, 'victory/12', 5, 'victory/13', 5, 'victory/14', 5, 'victory/15', 5, 'victory/16', 5, 'victory/17', 5, 'victory/18', 1), frameRate, false);\n    //死亡die\n    animations.add('die', Utils.concatRepeat([], 'die/1', 5, 'die/2', 9, 'die/3', 11, 'die/4', 10, 'die/5', 5, 'die/6', 5, 'die/7', 5, 'die/8', 5, 'die/9', 5, 'die/10', 5, 'die/11', 20, 'die/12', 5, 'die/13', 5, 'die/14', 5, 'die/15', 5, 'die/16', 1), frameRate, false);\n  }\n\n  //播放跑动动画及音频\n  playRun(play: boolean = true) {\n    if (play) {\n      this.play('run');\n      this.game.audio.playEffect('player-run');\n    } else {\n      this.play('waiting');\n      this.game.audio.playEffect(null);\n    }\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 内部工具\n  -------------------------------------------------------------\n  */\n\n  //获取当前触点所在坐标\n  public getActivePoint(gap: number = 0): Point {\n    let pointer = this.game.input.activePointer;\n    return new Point(pointer.x - gap, pointer.y - gap);\n  }\n\n}\n\nexport default Player;\n\n\n// WEBPACK FOOTER //\n// ./src/players/Player.ts","import { Point } from '../Utils';\nimport Game from '../../Game';\n\n/**\n * 所有精灵的基类，这里用于提供一些方法\n */\nabstract class Sprite extends Phaser.Sprite {\n\n  game: Game; //[重新声明]该game已变为我们自定义的Game类\n  body: Phaser.Physics.Arcade.Body; //[重新声明]\n\n  static defaultRate = 60; //[常数]默认频率\n\n  private collisionQueue: CollisionQueue = new Map(); //碰撞检测队列（用于update时进行碰撞检测）\n\n  protected tweens: Tweens = {}; //补间动画键值对\n  protected speed: number; //移动速度（用于moveTo等）\n\n  public options: SpriteOptions;\n  public shadow: Phaser.Sprite; //镜像精灵（当options.shadow存在时有效）\n\n  constructor(options: SpriteOptions) {\n    super(options.game, options.x, options.y, options.key, options.frame);\n\n    //初始化基本属性\n    this.options = options;\n    this.health = this.maxHealth = options.maxHealth;\n    this.speed = options.speed || Sprite.defaultRate;\n\n    //初始化body\n    this.game.physics.arcade.enable(this);\n    if (options.bodySize) {\n      this.body.setSize(options.bodySize.width, options.bodySize.height, options.bodySize.offsetX || 0, options.bodySize.offsetY || 0);\n    }\n    // //默认基础点定位位置\n    // let anchor = options.anchor || { x: 0.5, y: 0.5 }; //默认处于最中间\n    // this.anchor.setTo(anchor.x, anchor.y);\n    \n    //确定定位点（位于body偏移后指定区域的正中心）\n    let \n      bodyOffsetX = options.bodySize.offsetX || 0, bodyOffsetY = options.bodySize.offsetY,\n      anchorX = (this.body.width / 2 + bodyOffsetX) / this.width, anchorY = (this.body.height / 2 + bodyOffsetY) / this.height;\n    this.anchor.setTo(anchorX, anchorY);\n    \n    //添加到\n    if (options.toStage) {\n      this.game.stage.addChild(this);\n    } else {\n      this.game.add.existing(this);\n    }\n    //创建镜像\n    if (options.shadow) {\n      this.shadow = <Phaser.Sprite>this.addChild(this.game.make.sprite(options.shadow.x || 0, options.shadow.y || 0, options.shadow.key, options.shadow.frame));\n      //水平翻转\n      if (options.flipHorizontal) {\n        this.shadow.width *= -1;\n        this.shadow.x -= this.shadow.width;\n      }\n    }\n    //动画初始化\n    this.initializeAnimations();\n  }\n\n  //更新事件（主要用于碰撞检测）\n  update() {\n    // console.log('[Sprite]update');\n    let arcade = this.game.physics.arcade;\n    for (let [target, task] of this.collisionQueue) {\n      if (target instanceof Sprite) { //到达目标对象\n        arcade.overlap(this, target, task.callback);\n      } else if ('number' === typeof target.x \n        && 'number' === typeof target.y\n        && this.body.hitTest(target.x, target.y)) { //到达点\n        task.callback();\n      }\n    }\n  }\n\n  /*\n  ------------------------------------------------------------------\n  | 基本流程函数\n  ------------------------------------------------------------------\n  */\n  \n  //受伤（减血）\n  onBeforeHurt(): any {}\n  async hurt(hurtWhileDie: boolean = true) {\n    if (this.alive) {\n      this.health--;\n      let dead = this.health <= 0; //是否已经算死亡\n      if (!dead || (dead && hurtWhileDie)) { //1.未死 或 2.死之前调用hurt的逻辑\n        await this.onBeforeHurt();\n        await this.onAfterHurt();\n      }\n      if (dead) { this.die(); }\n    }\n  }\n  onAfterHurt(): any {}\n\n  //受治疗(非死亡状态有效)\n  onBeforeCure(): any {}\n  async cure() {\n    await this.onBeforeCure();\n    this.heal(1);\n    await this.onAfterCure();\n  }\n  onAfterCure(): any {}\n\n  //死亡\n  onBeforeDie(): any {}\n  async die(destroy: boolean = true) {\n    if (!this.alive) { return ; } //已死亡，不再执行\n    this.alive = false; //标记为未存活，以免重复被调用\n    await this.onBeforeDie();\n    if (destroy) {\n      this.destruct();\n    }\n    await this.onAfterDie();\n  }\n  onAfterDie(): any {}\n\n  //析构函数，回收资源并删除对象及其子对象\n  destruct() {\n    //移除关联的tween对象\n    this.game.tweens.removeFrom(this, true);\n    //销毁\n    this.destroy(true);\n  }\n\n  /*\n  ------------------------------------------------------------------\n  | 工具函数\n  ------------------------------------------------------------------\n  */\n\n  //将该sprite的body内部的相对于左上角的坐标转换为相对于中心点的坐标（意即body中坐标系的原点在中心点处）\n  toBodyPos(x: number, y: number): Coordinate {\n    return { x: x - this.body.width / 2, y: y - this.body.height / 2 };\n  }\n\n  //获取相对于body的各个角的坐标\n  getBodyCorner(place: string, offsetX?: number, offsetY?: number): Coordinate {\n    let basePos = { x: 0, y: 0 };\n    switch (place) {\n      case 'top-left':\n        break;\n      case 'top-right':\n        basePos.x = this.body.width; break;\n      case 'bottom-left':\n        basePos.y = this.body.height; break;\n      case 'bottom-right':\n        basePos.x = this.body.width, basePos.y = this.body.height; break;\n    }\n    if ('number' === typeof offsetX) { basePos.x += offsetX; }\n    if ('number' === typeof offsetY) { basePos.y += offsetY; }\n    return this.toBodyPos(basePos.x, basePos.y);\n  }\n  getBodyTopLeft(offsetX?: number, offsetY?: number): Coordinate { return this.getBodyCorner('top-left', offsetX, offsetY); }\n  getBodyTopRight(offsetX?: number, offsetY?: number): Coordinate { return this.getBodyCorner('top-right', offsetX, offsetY); }\n  getBodyBottomLeft(offsetX?: number, offsetY?: number): Coordinate { return this.getBodyCorner('bottom-left', offsetX, offsetY); }\n  getBodyBottomRight(offsetX?: number, offsetY?: number): Coordinate { return this.getBodyCorner('bottom-right', offsetX, offsetY); }\n\n  //移动到某个精灵对象或点\n  moveTo(target: Sprite|Coordinate, speed: number = this.speed) {\n    let queue = this.collisionQueue;\n    this.game.physics.arcade.moveToObject(this, target, speed);\n    // this.game.physics.arcade.moveToXY(this, target.x, target.y, speed);\n    return new Promise((resolve, reject) => {\n      queue.set(target, {\n        callback: () => {\n          //删除该碰撞检测任务\n          queue.delete(target);\n          //自动停止移动\n          this.body.velocity.setTo(0);\n          this.body.acceleration.setTo(0);\n          //解决此promise\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * 为当前或镜像sprite对象创建一个补间动画\n   * @param  {string} name? 若空，则不缓存，也无法通过getTween获取\n   * @param  {boolean=false} shadow 是否是为shadow创建\n   */\n  createTween(name?: string, shadow: boolean = false) {\n    if (name && this.tweens[name]) { return this.tweens[name]; }\n    let tween = this.game.add.tween(shadow ? this.shadow : this);\n    if (name) { this.tweens[name] = tween; }\n    return tween;\n  }\n  //获取某个补间动画\n  getTween(name: string) {\n    return this.tweens[name];\n  }\n  //播放一个补间动画\n  playTween(name: string, play: boolean = true) {\n    let tween = this.tweens[name];\n    if (play) {\n      tween.start();\n    } else {\n      tween.pause();\n    }\n    return tween;\n  }\n  //promise方式播放tween（注：该tween不能是loop或repeatAll(-1)的，否则promise永远不会返回，onComplete永远不会被调用）\n  promisePlayTween(name: string) {\n    let tween = this.getTween(name);\n    if (!tween) { return ; }\n    return new Promise((resolve) => {\n      tween.onComplete.addOnce(resolve);\n      tween.start();\n    });\n  }\n\n  // //[禁用原生play]override当前promisePlay方式和原play函数混用时，可能会导致promisePlay返回的promise无法完成(onComplete事件不被触发)，所以这里暂时禁止使用原生play\n  // play(name: string, frameRate?: number, loop?: boolean, killOnComplete?: boolean): Phaser.Animation {\n  //   throw new Error('为避免冲突，请采用promisePlay()方法');\n  // }\n\n  //重写原生play，以便支持将上一个动画stop\n  play(name: string, frameRate?: number, loop?: boolean, killOnComplete?: boolean): Phaser.Animation {\n    return <Phaser.Animation>this.exPlay(name, false, false, frameRate, loop, killOnComplete);\n  }\n\n  /**\n   * play函数的封装（支持动画播放完毕后才返回）\n   * @param  {string} name\n   * @param  {boolean=false} shadow 是否play镜像的动画\n   * @param  {boolean=true} promise 是否返回Promise\n   * @param  {...} originParams 其他用于Animation.play的参数\n   */\n  exPlay(name: string, shadow: boolean = false, promise: boolean = true, ...originParams): Promise<Phaser.Animation>|Phaser.Animation {\n    let \n      animations = (shadow ? this.shadow : this).animations,\n      currentAnimation = animations.currentAnim,\n      animation = animations.getAnimation(name);\n    //若当前有正在播放的动画，结束它并触发他之前绑定有的onComplete事件（否则以前动画的promise可能永远无法返回）\n    if (currentAnimation) {\n      console.debug('[promisePlay]当前有正在播放的动画，将结束此动画后重新播放新的动画. 当前动画的onComplete监听函数个数为: ', currentAnimation.onComplete.getNumListeners());\n      currentAnimation.stop(true, true);\n    }\n    if (promise) {\n      return new Promise((resolve) => {\n        //播放新的动画\n        animation.onComplete.addOnce(() => resolve(animation));\n        animation.play.call(animation, ...originParams);\n      });\n    } else {\n      return animation.play.call(animation, ...originParams);\n    }\n  }\n\n  /*\n  ------------------------------------------------------------------\n  | 子类实现函数\n  ------------------------------------------------------------------\n  */\n\n  // //[子类]覆盖设置配置值\n  // protected abstract setConfig(): Config;\n  //[子类]初始化动画\n  protected abstract initializeAnimations(): void;\n\n}\n\n//碰撞检测任务配置\ninterface CollisionTask {\n  callback: Function; //到达后的回调\n  // autoStop: boolean; //碰撞后是否自动停止\n  // autoRemove: boolean; //到达目标后，是否自动删除该碰撞检测任务\n}\ntype CollisionQueue = Map<Sprite|Coordinate, CollisionTask>; //注：这里针对同一个点或对象，仅只会有一个回调会被触发\n\n//补间动画键值对\nexport interface Tweens {\n  [index: string]: Phaser.Tween\n}\n\n//sprite初始化选项\ninterface SpriteOptions {\n  //用于sprite初始化的参数\n  game?: Phaser.Game;\n\n  x?: number; y?: number;\n  key?: string; //指定texture名\n  frame?: string | number;\n\n  //特有配置项\n  speed?: number; //移动速度（默认为Sprite.defaultRate）\n  toStage?: boolean; //是否创建到stage对象上（将用于跨state）\n  shadow?: { //是否创建一个精灵镜像（该镜像可专用于展示动画而不影响精灵本身，镜像将作为其孩子，可通过shadow属性访问）\n    x?: number; y?: number; //相对父sprite的坐标位置（默认＝0）\n    key?: string; //指定texture名\n    frame?: string | number;\n  };\n  flipHorizontal?: boolean; //该sprite内的孩子是否进行水平翻转（该设置会影响shadow及其他孩子）【注】仅影响其下孩子，该sprite本身不会被翻转\n  maxHealth?: number; //该精灵最大生命值（对ghost无意义，因为它用的是其他初始化方式）\n  bodySize?: { //用于碰撞检测的body的尺寸和偏移量，用于body.setSize()\n    width: number; height: number;\n    offsetX?: number; offsetY?: number; //相对原图的偏移量\n  };\n  // anchor?: { //指定原点位置倍数，默认为（0.5,0.5）\n  //   x: number;\n  //   y: number;\n  // }\n}\n\nexport default Sprite;\nexport { Sprite, SpriteOptions };\n\n\n// WEBPACK FOOTER //\n// ./src/core/sprite/Sprite.ts","\n/**\n * 静态功能性方法\n */\nclass Utils {\n  \n  /**\n   * 将重复生成的多个元素与原数组连接，将改变并返回原数组\n   * @param  {any[]} origin\n   * @param  {T} value\n   * @param  {number=1} repeat\n   */\n  static concatRepeat<T>(origin: any[], ...repeaters: any[]): any[] {\n    if (repeaters.length % 2 != 0) { throw new Error('参数格式不正确'); }\n    for (let i = 0, len = repeaters.length; i < len; i += 2) {\n      let value = repeaters[i], repeat = repeaters[i + 1];\n      for (let j = 0; j < repeat; j++) {\n        origin.push(value);\n      }\n    }\n    return origin;\n  }\n\n}\n\n/**\n * 坐标点\n */\nclass Point extends Phaser.Point {\n\n  //获取两点间的中点\n  static getMiddlePoint(p1: Point, p2: Point): Point {\n    return new Point(p1.x + (p2.x - p1.x) / 2, p1.y + (p2.y - p1.y) / 2);\n  }\n\n  //获取两线段（向量）间的夹角（由4个点代表）\n  static getAngleBetween(A: Point, B: Point, C: Point, D: Point): number {\n    let\n      AB = { x: B.x - A.x, y: B.y - A.y },\n      CD = { x: D.x - C.x, y: D.y - C.y };\n    let\n      dividend = AB.x * CD.x + AB.y * CD.y,\n      divisor = Math.sqrt(Math.pow(AB.x, 2) + Math.pow(AB.y, 2)) * Math.sqrt(Math.pow(CD.x, 2) + Math.pow(CD.y, 2)), //[注]这里可能出现dividend=549，divisor=548.99999999的情况，其实此时他们应该是相等才对，所以导致出现divide>1的情况，从而导致acos()返回NaN\n      divide = dividend / divisor;\n    if (divide > 1) { divide = 1; } //修正由于求根divisor导致失精度的情况\n    let\n      radian = Math.acos(divide),\n      angle = radian * 180 / Math.PI;\n    // console.log(`[getAngleBetween]dividend=${dividend}, divisor=${divisor}, radian=${radian}`);\n    return angle;\n  }\n\n  /**\n   * 通过精度进行过滤，从而仅保留关键点\n   * @param  {Point[]} points 原始散列点集合\n   * @param  {number} precision 精度值(单位:px像素)\n   * @param  {number=0} startIndex 过滤开始的索引位置\n   * @return {Point[]} 返回新的仅含关键点的数组\n   */\n  static filterByPrecision(points: Point[], precision: number, startIndex: number = 0): Point[] {\n    if (precision < 1) { throw new Error('精度至少为1'); }\n    let\n      len = points.length,\n      keyPoint: Point = points[startIndex], //第一个点作为关键点\n      resultPoints: Point[] = [];\n    //拷贝以前的关键点(startIndex之前的)\n    for (let i = 0; i < startIndex && i < len; i++) {\n      resultPoints.push(points[i]);\n    }\n    //加入第一个关键点\n    resultPoints.push(keyPoint);\n    //找寻后面的关键点\n    for (let i = startIndex + 1; i < len; i++) {\n      if (Point.distance(keyPoint, points[i]) > precision) { //精度外的点保留，精度内的将被过滤掉\n        keyPoint = points[i]; //将此点作为下一个关键点\n        resultPoints.push(keyPoint); //记录此关键点\n      }\n    }\n    //返回新的关键点列表\n    return resultPoints;\n  }\n\n}\n\nexport default Utils;\nexport { Utils, Point };\n\n\n// WEBPACK FOOTER //\n// ./src/core/Utils.ts","import { Point } from '../core/Utils';\nimport { LifeFigureValue } from './LifeFigure';\n\n//画线处理器\nexport class LineBuilder {\n\n  // static baseVector: Point = new Point(1, 0); //基线向量，用于计算线段的相对角度\n  static baseVector = { //基线向量，用于计算线段的相对角度\n    start: new Point(0, 0),\n    end: new Point(1, 0)\n  };\n  static softAngle: number = 10; //[配置值]横竖线的容错角度（此值越大，则越容易匹配为横竖线，而非斜线）\n\n  private points: Point[]; //原始散列点集合\n  private keyPoints: Point[]; //关键点集合\n  private lines: Line[]; //计算出的线段结果（由于图形的限制，该数组数量会被限制，目前只有“闪电”图形，会用到最多的3条线段）\n  private lastFakeLine: Line; //最后一条模拟线段，仅用于实时显示\n  private lastIndex: number; //上次计算后，停留在的最后一个点在points中的索引（会作为下一次计算的起始位置）\n  private maxLines: number = 20; //限制最大线段数量，0表示不限制（若超出后，老的线段会被移除）注：若设置过小，可能导致判断失效\n  private precision: number; //筛选关键点时使用的精度，一般为lineWidth的一半（单位：px）\n  private lineWidth: number; //画线的宽度\n\n  // private resultFigure: LineFigure; //最终计算所得的图形\n\n  //图形匹配规则（用于直接匹配为指定图形）\n  static FigureRules: LineFigureRule[] = [{ //竖线\n    exactMatch: true,\n    figure: LifeFigureValue.VERTICAL,\n    ruleList: [{ types: [LineType.DOWN, LineType.UP], range: [1, 2]  }]\n  }, { //横线\n    exactMatch: true,\n    figure: LifeFigureValue.HORIZONTAL,\n    ruleList: [{ types: [LineType.LEFT, LineType.RIGHT], range: [1, 2] }]\n  }, { //上凸\n    exactMatch: true,\n    figure: LifeFigureValue.BULGE,\n    ruleList: [\n      {types: LineType.DOWN_RIGHT, range: [1, 4] }, // 6 [1,4]\n      { types: LineType.RIGHT, range: [0, 2] }, // 1 [0,2]\n      { types: [LineType.UP, LineType.UP_RIGHT], range: [1, 4] } // 3|5 [1,4]\n    ]\n  }, {\n    exactMatch: true,\n    figure: LifeFigureValue.BULGE,\n    ruleList: [\n      LineType.DOWN, // 4\n      { types: LineType.DOWN_RIGHT, range: [0, 3] }, // 6 [0,3]\n      { types: LineType.RIGHT, range: [0, 2] }, // 1 [0,2]\n      { types: LineType.UP_RIGHT, range: [1, 4] } // 5 [1,4]\n    ]\n  },{\n    exactMatch: true,\n    figure: LifeFigureValue.BULGE,\n    ruleList: [\n      { types: LineType.DOWN_LEFT, range: [1, 4] }, // 8 [1,4]\n      { types: LineType.LEFT, range: [0, 2] },  // 2 [0,2]\n      { types: [LineType.UP, LineType.UP_LEFT], range: [1, 4] } // 3|7 [1,4]\n    ]\n  }, {\n    exactMatch: true,\n    figure: LifeFigureValue.BULGE,\n    ruleList: [\n      LineType.DOWN, // 4\n      { types: LineType.DOWN_LEFT, range: [0, 3] }, // 8 [0,3]\n      { types: LineType.LEFT, range: [0, 2] }, // 2 [0,2]\n      { types: LineType.UP_LEFT, range: [1, 4] } // 7 [1,4]\n    ]\n  }, { //下凹\n    exactMatch: true,\n    figure: LifeFigureValue.SUNKEN,\n    ruleList: [\n      {types: LineType.UP_RIGHT, range: [1, 4] }, // 5 [1,4]\n      { types: LineType.RIGHT, range: [0, 2] }, // 1 [0,2]\n      { types: [LineType.DOWN, LineType.DOWN_RIGHT], range: [1, 4] } // 4|6 [1,4]\n    ]\n  }, {\n    exactMatch: true,\n    figure: LifeFigureValue.SUNKEN,\n    ruleList: [\n      LineType.UP, // 3\n      { types: LineType.UP_RIGHT, range: [0, 3] }, // 5 [0,3]\n      { types: LineType.RIGHT, range: [0, 2] }, // 1 [0,2]\n      { types: LineType.DOWN_RIGHT, range: [1, 4] } // 6 [1,4]\n    ]\n  },{\n    exactMatch: true,\n    figure: LifeFigureValue.SUNKEN,\n    ruleList: [\n      { types: LineType.UP_LEFT, range: [1, 4] }, // 7 [1,4]\n      { types: LineType.LEFT, range: [0, 2] },  // 2 [0,2]\n      { types: [LineType.DOWN, LineType.DOWN_LEFT], range: [1, 4] } // 4|8 [1,4]\n    ]\n  }, {\n    exactMatch: true,\n    figure: LifeFigureValue.SUNKEN,\n    ruleList: [\n      LineType.UP, // 3\n      { types: LineType.UP_LEFT, range: [0, 3] }, // 7 [0,3]\n      { types: LineType.LEFT, range: [0, 2] }, // 2 [0,2]\n      { types: LineType.DOWN_LEFT, range: [1, 4] } // 8 [1,4]\n    ]\n  }, { //闪电\n    figure: LifeFigureValue.LIGHTNING,\n    ruleList: [\n      { types: [LineType.DOWN_LEFT, LineType.DOWN], range: [1, 4] }, // 8|4 [1,4]\n      { types: [LineType.RIGHT, LineType.DOWN_RIGHT], range: [1, 4] }, // 1|6 [1,4]\n      { types: [LineType.DOWN_LEFT, LineType.DOWN], range: [1, 4] } // 8|4 [1,4]\n    ]\n  }];\n\n  //初始化\n  constructor(lineWidth: number = 20) {\n    this.points = [];\n    this.keyPoints = [];\n    this.lines = [];\n    this.lastIndex = 0;\n    this.lineWidth = lineWidth;\n    this.precision = lineWidth / 2;\n  }\n\n  //获取所有线段列表\n  public getLines() {\n    return this.lines;\n  }\n\n  //添加新的散列点\n  public addPoint(point: Point) {\n    this.points.push(point);\n    this.keyPoints.push(point);\n  }\n\n  //获取当前所有散列点列表\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  //累加计算线段\n  public calculate(isEnd: boolean = false): void {\n    let line: Line = null, { lines, maxLines } = this;\n    while(line = this.calculateOneLine(isEnd)) {\n      console.debug('[Player.calculateLines]新增了一条线段');\n      if (maxLines && lines.length > maxLines) { //若线段数量超量，则移除旧的\n        console.debug('[Player.calculateLines]移除一条旧的线段');\n        lines.shift();\n      }\n    }\n  }\n\n  /**\n   * 计算指定线段所构成的图形\n   * @param  {Line[]} lines 指定线段列表，默认为当前线段列表\n   */\n  public calculateFigure(lines: Line[] = this.lines, debugCtx?: CanvasRenderingContext2D): LifeFigureValue {\n    let rules = LineBuilder.FigureRules;\n    //按顺序判断基本图形\n    for (let rule of rules) {\n      if (this.isMatchFigureRule(lines, rule)) {\n        return rule.figure;\n      }\n    }\n    //匹配桃心\n    if (this.isMatchHeart(lines, this.lineWidth, debugCtx)) {\n      return LifeFigureValue.HEART;\n    }\n    return null;\n  }\n\n  /**\n   * DEBUG 画出所有线段及其相关信息\n   * @param  {Phaser.BitmapData} pallete 将要画写到的画板对象（注：此画板的尺寸必须囊括所有线段的点，比如直接是Player的pallete属性）\n   */\n  public drawDebugInfo(pallete: Phaser.BitmapData) {\n    let ctx = pallete.ctx, lines = [].concat(this.lines); //创建一个新的线段数组用于显示，避免影响原数组\n    if (this.lastFakeLine) { //若有模拟线段，则加入显示\n      lines.push(this.lastFakeLine);\n    }\n    // console.log('--------lines length: ', lines.length);\n    ctx.save();\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 1;\n    ctx.font = '12px serif';\n    lines.forEach((line) => {\n      let start = line.startPoint, end = line.endPoint;\n      ctx.beginPath();\n      ctx.moveTo(start.x, start.y);\n      ctx.lineTo(end.x, end.y);\n      ctx.stroke();\n      \n      //绘制中间的角度值\n      let middlePoint = Point.getMiddlePoint(start, end), label = '';\n      switch (line.type) {\n        case LineType.DOWN: label = 'DOWN'; break;\n        case LineType.UP: label = 'UP'; break;\n        case LineType.RIGHT: label = 'RIGHT'; break;\n        case LineType.LEFT: label = 'LEFT'; break;\n        case LineType.UP_LEFT: label = 'UP_LEFT'; break;\n        case LineType.UP_RIGHT: label = 'UP_RIGHT'; break;\n        case LineType.DOWN_LEFT: label = 'DOWN_LEFT'; break;\n        case LineType.DOWN_RIGHT: label = 'DOWN_RIGHT'; break;\n      }\n      ctx.fillText(`${line.angle}度, ${label}`, middlePoint.x, middlePoint.y);\n    });\n\n    //显示当前图形判断\n    let figure = this.calculateFigure(lines, ctx);\n    let label = '';\n    switch (figure) {\n      case LifeFigureValue.VERTICAL: label = 'VERTICAL'; break;\n      case LifeFigureValue.HORIZONTAL: label = 'HORIZONTAL'; break;\n      case LifeFigureValue.BULGE: label = 'BULGE'; break;\n      case LifeFigureValue.SUNKEN: label = 'SUNKEN'; break;\n      case LifeFigureValue.LIGHTNING: label = 'LIGHTNING'; break;\n      case LifeFigureValue.HEART: label = 'HEART'; break;\n    }\n    ctx.fillText(`当前图形: ${label}`, pallete.width - 100, 12);\n\n    pallete.dirty = true; //更新显示\n    ctx.restore();\n  }\n\n  //创建一个线段对象\n  private createLine(startPoint: Point, endPoint: Point, isFake: boolean = false): Line {\n    // let vector = new Point(endPoint.x - startPoint.x, endPoint.y - startPoint.y);\n    let { start, end } = LineBuilder.baseVector, angle = Point.getAngleBetween(startPoint, endPoint, start, end);\n    let line = {\n      startPoint: startPoint,\n      endPoint: endPoint,\n      // angle: Point.angle(vector, MagicLineProcessor.baseVector) //相对基线向量的角度\n      angle: angle,\n      type: this.getLineType(startPoint, endPoint, angle), //计算该线段的图形\n      isFake: isFake\n    };\n    if (line.isFake) {\n      this.lastFakeLine = line;\n      return null;\n    } else {\n      this.lastFakeLine = null; //清除原模拟线，表示已经终结\n      return line;\n    }\n  }\n\n  //通过两点计算出所代表线段的图形\n  private getLineType(start: Point, end: Point, angle?: number): LineType {\n    if (Point.equals(start, end)) { throw new Error('[getFigureBetween]意外情况，线段的起始点和终点相同'); }\n    if (typeof angle == 'undefined') {\n      let { start: baseStart, end: baseEnd } = LineBuilder.baseVector;\n      angle = Point.getAngleBetween(start, end, baseStart, baseEnd);\n    }\n    let { x: x1, y: y1 } = start, { x: x2, y: y2 } = end, a = LineBuilder.softAngle, type: LineType = null;\n    switch (true) { //[注]此处代码冗余较多，待优化\n      case (x1 < x2 && (angle >= 0 && angle <= a)): type = LineType.RIGHT; break;\n      case (x1 > x2 && (angle >= 180 - a && angle <= 180)): type = LineType.LEFT; break;\n      case (y1 > y2 && (angle >= 90 - a && angle <= 90 + a)): type = LineType.UP; break;\n      case (y1 < y2 && (angle >= 90 - a && angle <= 90 + a)): type = LineType.DOWN; break;\n      case (y1 > y2 && (angle > a && angle < 90 - a)): type = LineType.UP_RIGHT; break;\n      case (y1 < y2 && (angle > a && angle < 90 - a)): type = LineType.DOWN_RIGHT; break;\n      case (y1 > y2 && (angle > 90 + a && angle < 180 - a)): type = LineType.UP_LEFT; break;\n      case (y1 < y2 && (angle > 90 + a && angle < 180 - a)): type = LineType.DOWN_LEFT; break;\n    }\n    return type;\n  }\n\n  /**\n   * 判断是否满足某个图形匹配规则\n   * @param  {Line[]} lines\n   * @param  {LineFigureRule} figureRule\n   */\n  private isMatchFigureRule(lines: Line[], figureRule: LineFigureRule): boolean {\n    if (!lines.length) { return false; }\n    let ruleList = figureRule.ruleList, currentIndex = lines.length - 1; //从最后往前找\n    //遍历规则\n    for (let i = 0, len = ruleList.length; i < len; i++) {\n      let rule = ruleList[i];\n      //统一格式\n      if (typeof rule == 'number') { rule = { types: [<LineType>rule] }; } //转换为LineTypeSetInfo对象\n      if (!Array.isArray(rule.types)) { rule.types = [rule.types]; } //转换types成数组\n      if (!rule.range) { rule.range = [1, 1]; } //默认仅判断1个\n      //遍历查询比对\n      let appearTimes = 0, [ min, max ] = rule.range;\n      for (; currentIndex >= 0; currentIndex--) {\n        // console.log('currentIndex: ', currentIndex);\n        // console.log('------当前线段的类型和需要匹配的类型列表：', lines[currentIndex].type, rule.types);\n        if (rule.types.indexOf(lines[currentIndex].type) != -1) { //匹配\n          appearTimes++;\n          if (appearTimes > max) { //这里提前作出判断，避免多余循环，浪费性能（超量，表示整个匹配失败，[直接退出]）\n            // console.log('------appearTimes超出: ', appearTimes);\n            return false;\n          }\n        } else { //类型不匹配\n          // console.log('不匹配，继续下一个匹配break;');\n          break; //继续下一个类型的匹配（要根据后面的监测看是否匹配成功）\n        }\n      }\n      //核算匹配次数\n      if (appearTimes >= min && appearTimes <= max) { //在合理范围，本次匹配成功\n        continue; //标记此type被匹配上[继续下一个type的匹配]\n      } else {\n        // console.log('------匹配失败: ', appearTimes);\n        return false; //本次匹配失败[直接退出]\n      }\n    }\n    //检查是否需要完整匹配\n    if (figureRule.exactMatch && currentIndex > -1) { //若需完整匹配，而当前线段列表还未遍历完，则代表遍历失败（遍历完时currentIndex应该为-1）\n      // console.log('-----需要完整匹配，而原线段列表还未遍历完，所以匹配失败');\n      return false;\n    }\n    //全部已匹配\n    return true;\n  }\n\n  /**\n   * 是否匹配桃心图形\n   * @param  {Line[]} lines\n   * @param  {number} lineWidth 线宽（用于计算封口处的误差）\n   * @param  {CanvasRenderingContext2D} debugCtx? 指定ctx对象来进行调试，将画出外边框和内边框\n   */\n  private isMatchHeart(lines: Line[], lineWidth: number, debugCtx?: CanvasRenderingContext2D) {\n    let keyPoints = this.keyPoints;\n    if (lines.length < 3) { return false; } //[判断条件-1]线段数量须>=3\n    if (Point.distance(keyPoints[0], keyPoints[keyPoints.length - 1]) > lineWidth * 2) { return false; } //[判断条件-2]第一个点和最后一个点距离不得超过ctx.lineWidth * n\n    //算出最外的点坐标\n    let\n      firstPoint = this.keyPoints[0],\n      top: number = firstPoint.y, bottom: number = firstPoint.y, left: number = firstPoint.x, right: number = firstPoint.x; //将第一个点坐标作为计算的初始值\n    //计算外框矩形\n    this.keyPoints.forEach((point) => {\n      if (point.y < top) { top = point.y; }\n      if (point.y > bottom) { bottom = point.y; }\n      if (point.x < left) { left = point.x; }\n      if (point.x > right) { right = point.x; }\n    });\n    let outerRect = new Phaser.Rectangle(left, top, right - left, bottom - top);\n    //内框矩形\n    let leftGap = outerRect.width * 0.2, innerWidth = outerRect.width - leftGap * 2, topGap = outerRect.height * 0.4, innerHeight = outerRect.height - topGap - outerRect.height * 0.2;\n    if (innerWidth < 10 || innerHeight < 10) { return false; } //[判断条件-3]内框宽高须>=10\n    let innerRect = new Phaser.Rectangle(outerRect.x + leftGap, outerRect.y + topGap, innerWidth, innerHeight);\n    // //边框的4个角的点\n    // let leftTop = new Point(left, top), rightTop = new Point(right, top), leftBottom = new Point(left, bottom), rightBottom = new Point(right, bottom);\n    \n    //在内框中，关键点的个数\n    let invalidNum = 0, invalidPercent = 0;\n    this.keyPoints.forEach((point) => {\n      if (innerRect.contains(point.x, point.y)) { invalidNum++; }\n    });\n    invalidPercent = Math.floor((invalidNum / this.keyPoints.length) * 100);\n    if (invalidPercent > 10) { return false; } //[判断条件-4]内框中关键点个数不得超过10%\n\n    //[DEBUG]画出debug图形\n    if (debugCtx) {\n      debugCtx.save();\n\n      //画出外边框\n      debugCtx.strokeStyle = 'blue';\n      debugCtx.lineWidth = 1;\n      debugCtx.strokeRect(outerRect.x, outerRect.y, outerRect.width, outerRect.height);\n      //画出内边框\n      debugCtx.strokeStyle = 'green';\n      debugCtx.strokeRect(innerRect.x, innerRect.y, innerRect.width, innerRect.height);\n\n      debugCtx.restore();\n    }\n\n    //所有条件通过，返回true\n    return true;\n  }\n\n  /**\n   * 从计算结果对象中，计算出下一条线段（若未能找到，则返回null）\n   * @param  {boolean=false} isEnd 当前是否是处于画线结尾（用于暂时找不到转折点的情况下，当遇到最后一个点时，该点即作为线段的结尾）\n   * @returns MagicLine | null 返回找到的那条线段\n   */\n  private calculateOneLine(isEnd: boolean = false): Line {\n    let { lines, lastIndex } = this;\n    //---关键点过滤（精度过滤）\n    let points = this.keyPoints = Point.filterByPrecision(this.keyPoints, this.precision, lastIndex);\n    //---初始位置\n    let firstPoint = points[lastIndex], secondPoint = points[lastIndex + 1], line: Line = null;\n    //---遍历关键点\n    for (let i = lastIndex, len = points.length; i < len; i++) {\n      let startPoint = points[i], middlePoint = points[i + 1], endPoint = points[i + 2]; //它的下一个点作为中间点，后一个点作为第三个点（这样用于计算三点构成的两向量间的夹角）\n      if (!middlePoint) { //1.若中间点不存在，则无法形成新的线段（无法找到线段终点），直接退出\n        break;\n      } else if (!endPoint) { //2.若第三点不存在\n        if (isEnd) { //2.1.若这此是最后一次计算（后面不会再新增散列点了），则并作一条线段，然后结束掉\n          line = this.createLine(firstPoint, middlePoint);\n          this.lastIndex = i + 1;\n          break;\n        } else { //2.2.若不是最后一次计算，则需要等待下一个转折点（新的散列点加入），才能确定这条线段的结束，所以直接退出\n          this.createLine(firstPoint, middlePoint, true); //创建保存一个模拟线段，仅用于实时显示信息，不加入线段计算中\n          return null; //[直接退出]\n        }\n      }\n      //3.三点都存在\n      let \n        startAngle = Point.getAngleBetween(startPoint, middlePoint, middlePoint, endPoint),\n        firstAngle = Point.getAngleBetween(firstPoint, secondPoint, firstPoint, endPoint);\n      if (isNaN(startAngle)) {\n        console.error(`[MagicLineProcessor.calculateOneLine]startAngle值意外地变为了NaN，需要检查4个点的坐标是否有重合嫌疑: (${startPoint.x}, ${startPoint.y}), (${middlePoint.x}, ${middlePoint.y}), (${middlePoint.x}, ${middlePoint.y}), (${endPoint.x}, ${endPoint.y})`);\n        throw new Error('startAngle的值变为了NaN，需要排查程序');\n      }\n      if (isNaN(firstAngle)) {\n        console.error(`[MagicLineProcessor.calculateOneLine]firstAngle值意外地变为了NaN，需要检查4个点的坐标是否有重合嫌疑: (${firstPoint.x}, ${firstPoint.y}), (${secondPoint.x}, ${secondPoint.y}), (${firstPoint.x}, ${firstPoint.y}), (${endPoint.x}, ${endPoint.y})`);\n        throw new Error('firstAngle的值变为了NaN，需要排查程序');\n      }\n\n      // console.log(`startAngle: ${startAngle}, firstAngle: ${firstAngle}`);\n      if (startAngle < 40 && firstAngle < 20) { //若两种夹角都满足，则将其归纳为同一条线段\n        continue; //继续下一个判断（直到找到该线段的终点）\n      } else { //若夹角不满足，则表示遇到了转折点\n        line = this.createLine(firstPoint, middlePoint); //初始点和当前中间点作为一条线段\n        this.lastIndex = i + 1; //记录最后一点（便于后续新增散列点后，继续计算）\n        break;\n      }\n    }\n    if (line) { //若已计算出一条线段，则保存到结果集中\n      lines.push(line);\n    }\n    return line;\n  }\n\n}\n\n//线段类型匹配规则及其集合（用于匹配判断图形）\nexport interface LineRule {\n  types: LineType | LineType[]; //多种类型（或的关系）\n  range?: number[]; //该类型值的重复范围\n}\n//组合图形的匹配规则\nexport interface LineFigureRule {\n  figure: LifeFigureValue; //该规则所匹配的图形\n  ruleList: (LineRule | LineType)[]; //规则列表\n  exactMatch?: boolean; //是否执行完整匹配（即ruleList的最后一个规则匹配完剩余的所有线段）\n}\n\n//线段类型\nexport const enum LineType {\n  LEFT, RIGHT, //横线：左方、右方\n  UP, DOWN, //竖线：上方、下方\n  UP_RIGHT, UP_LEFT, //斜线：斜上右方、斜上左方\n  DOWN_RIGHT, DOWN_LEFT //斜线：斜下右方、斜下左方\n}\n\n//线段\nexport interface Line {\n  // points: Point[]; //属于该线段的原始散列点集合\n  startPoint: Point; //起点\n  endPoint: Point; //终点\n  angle: number; //与向量<0, 1>之间的角度\n  type: LineType; //所属图形\n  isFake: boolean; //标记该线段是否是模拟线段（用于在画线过程中，标记最近算出来的一条线段，但它并非是最终确定的线段，所以下一次重新计算线段时，若有新的线段需要加入，则此线段必须先移除）\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LineBuilder.ts","import Ghost from '../core/sprite/Ghost';\n\n/**\n * 用于ghost的血条显示和管理\n */\nexport class LifeFigure {\n\n  private ghost: Ghost; //所属ghost\n  private figureDatas: FigureData[] = []; //存放血块类型和图像对象\n  private options: LifeFigureOptions; //选项配置\n\n  //给某ghost对象添加血条显示和管理\n  constructor(ghost: Ghost, lifeValues: LifeFigureValue[], options?: LifeFigureOptions) {\n    this.ghost = ghost;\n    this.options = Object.assign({\n      // offset: { //起始点相对位置（默认考虑了anchor的位置偏移）\n      //   x: - (this.ghost.body.width * this.ghost.anchor.x),\n      //   y: - (this.ghost.body.height * this.ghost.anchor.y)\n      // }\n    }, options);\n    //在ghost头顶按顺序创建血块图像\n    let create = this.ghost.game.add;\n    for (let figure of lifeValues) {\n      let image = create.image(0, 0, 'Misc', `figure/${LifeFigureMap[figure]}`);\n      ghost.addChild(image);\n      this.figureDatas.push({ figure: figure, image: image });\n    }\n    //位置排列\n    this.arrangeFigures();\n  }\n\n  //重新排列figures图像位置\n  private arrangeFigures() {\n    let\n      flipHorizontal = this.ghost.options.flipHorizontal, figureWidth = 26, figureHeight = 24,\n      startPos = flipHorizontal ? this.ghost.getBodyTopRight(-figureWidth, -figureHeight) : this.ghost.getBodyTopLeft(0, -figureHeight), //起始点位置\n      offsetX = 0; //累加x坐标\n    console.log('--arrangeFigures', this.ghost.body.width, this.ghost.anchor.x, this.ghost.body.height, this.ghost.anchor.y);\n    this.figureDatas.forEach((data) => {\n      data.image.x = startPos.x + offsetX;\n      data.image.y = startPos.y;\n      offsetX += flipHorizontal ? -figureWidth : figureWidth; //向右 或 左继续排列\n    });\n  }\n\n  //获取当前图形\n  getCurrentFigure(): LifeFigureValue|null {\n    return this.figureDatas.length ? this.figureDatas[0].figure : null;\n  }\n\n  //减少一个figure图形，并调整显示位置\n  reduceFigure() {\n    this.figureDatas.shift().image.destroy();\n    this.arrangeFigures();\n  }\n\n}\n\n//资源字符串映射表\nexport const LifeFigureMap = {\n  [LifeFigureValue.BULGE]: 'bugle',\n  [LifeFigureValue.SUNKEN]: 'sunken',\n  [LifeFigureValue.VERTICAL]: 'vertical',\n  [LifeFigureValue.HORIZONTAL]: 'horizontal',\n  [LifeFigureValue.LIGHTNING]: 'lightning',\n  [LifeFigureValue.HEART]: 'heart'\n}\n\n//血条值（形状）\nexport const enum LifeFigureValue {\n  BULGE = 1, SUNKEN = 2, //上凸、下凹\n  VERTICAL = 3, HORIZONTAL = 4, //竖线、横线\n  LIGHTNING = 5, HEART = 6 //闪电、桃心\n}\n\ninterface FigureData {\n  figure: LifeFigureValue; //所属图形\n  image: Phaser.Image; //显示图像\n}\n\nexport interface LifeFigureOptions {\n  // flipHorizontal: boolean; //是否水平翻转 - 从左上角到右上角依次显示（否则是反方向: 从右上角到左上角依次显示） [该选项直接在SpriteOptions中获取]\n  // offset?: { x: number, y: number }; //图像的初始显示位置\n}\n\nexport default LifeFigure;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LifeFigure.ts","import Level from '../core/Level';\nimport { LifeFigureValue } from '../lib/LifeFigure';\n\n/**\n * 第一关\n */\nclass Level1 extends Level {\n\n  private fresher;\n\n  setupScene() {\n    this.setBackground('level-1');\n  }\n\n  setupGhosts() {\n    let game = this.scene.game, player = this.scene.player;\n    this.fresher = this.createGhost('Fresher', 100, 100, {\n      lifeValues: [LifeFigureValue.BULGE, LifeFigureValue.HEART, LifeFigureValue.SUNKEN, LifeFigureValue.VERTICAL, LifeFigureValue.HORIZONTAL, LifeFigureValue.LIGHTNING]\n    });\n    // this.fresher = this.createGhost('Fresher', game.width / 2, game.height / 2, {\n    //   // lifeValues: [LifeFigureValue.BULGE, LifeFigureValue.HEART, LifeFigureValue.SUNKEN, LifeFigureValue.VERTICAL, LifeFigureValue.HORIZONTAL, LifeFigureValue.LIGHTNING]\n    //   lifeValues: [LifeFigureValue.BULGE]\n    // });\n\n    console.log('Level1', this.ghosts.children);\n\n    //test\n    // window['fresher'] = this.fresher;\n    // window['player'] = player;\n  }\n\n  // render() {\n  //   super.render();\n  //   let debug = this.scene.game.debug;\n  //   if (this.fresher) {\n  //     debug.bodyInfo(this.fresher, 15, 20);\n  //     // debug.body(this.fresher, 'rgba(0, 0, 255, 0.5)');\n  //     // debug.spriteBounds(this.fresher, 'rgba(0, 255, 0, 0.5)');\n  //     // debug.spriteCoords(this.fresher, 15, 20);\n\n  //     let shadow = this.fresher.shadow;\n  //     // debug.spriteBounds(shadow);\n  //     // debug.spriteInfo(shadow, 15, 20);\n  //     // debug.spriteCoords(shadow, 15, 20);\n  //   }\n  // }\n\n}\n\nexport default Level1;\n\n\n// WEBPACK FOOTER //\n// ./src/levels/Level1.ts","// import Player from '../players/Player';\n// import Game from '../Game';\nimport GameLevel from '../states/GameLevel';\n//ghost\nimport { GhostOptions } from './sprite/Ghost';\nimport Fresher from '../ghosts/Fresher';\nimport Ghost from './sprite/Ghost';\n\n/**\n * 游戏关卡虚基类\n */\nabstract class Level {\n\n  //ghost类型\n  static GhostTypes = {\n    'Fresher': Fresher\n  };\n\n  scene: GameLevel; //各关卡的总场景对象\n  ghosts: Phaser.Group; //存放该关卡的所有ghost\n\n  constructor(scene: GameLevel) {\n    this.scene = scene;\n    this.ghosts = new Phaser.Group(this.scene.game);\n  }\n\n  //场景布置（如：设置背景图，周边固定动画元素等，比如蜡烛动画）\n  abstract setupScene(): void;\n  \n  //[子类可重写]\n  render(): void {\n    // //【性能消耗】显示所有ghost的body、sprite本身、shadow本身的轮廓\n    // this.ghosts.forEachAlive((ghost) => {\n    //   if (ghost instanceof Ghost) {\n    //     let debug = this.scene.game.debug;\n    //     debug.body(ghost, 'rgba(0, 255, 0, 0.3)'); //body - 绿色\n    //     debug.spriteBounds(ghost, 'rgba(255, 0, 0, 0.3)'); //sprite本身 - 红色\n    //     if (ghost.shadow) { debug.spriteBounds(ghost.shadow, 'rgba(0, 0, 255, 0.3)'); } //shadow本身 - 蓝色\n    //   }\n    // }, null);\n  }\n\n  //创建GHOST对象\n  abstract setupGhosts(): void;\n\n  //创建ghost\n  createGhost(name: string, x: number, y: number, options?: GhostOptions) {\n    let ghostClass = Level.GhostTypes[name], player = this.scene.player, game = this.scene.game;\n    if (ghostClass) {\n      let ghost: Ghost = new ghostClass(player, Object.assign({\n        game: game,\n        x: x, y: y,\n        flipHorizontal: x < game.width / 2 //若处于左边区域，则进行水平翻转\n      }, options));\n      return this.ghosts.add(ghost);\n    } else {\n      throw new Error('找不到要创建的Ghost对象');\n    }\n  }\n\n  // //ghost生成器\n  // generateGhosts(name: string, options: GenerateOptions) {\n  //   options = Object.assign({\n  //     positions: new Phaser.Point(0, 0),\n  //     regionRadius: 0, //默认在基础点上生成\n  //     amount: 1 //默认仅生成一个\n  //   }, options);\n    \n  //   // let\n  //   //   totalPoints = Array.isArray(options.positions) ? options.positions.length : 1, //总基础点数\n  //   //   average = options.amount > 1 ? Math.floor(options.amount / totalPoints) : 1; //平均生成个数\n  //   // for (let count = 0; count < options.amount; i++) {}\n  // }\n  \n  //切换背景图片（切换帧），若frameName为空，则隐藏背景\n  setBackground(frameName) {\n    let background = this.scene.background;\n    if (frameName) {\n      background.frameName = frameName;\n      background.visible = true; //显示\n    } else {\n      background.visible = false; //隐藏\n    }\n  }\n\n}\n\nexport default Level;\n\n//////////////////////\n\n//ghost生成器选项\ninterface GenerateOptions {\n  positions?: Phaser.Point[] | Phaser.Point; //生成基础坐标点\n  regionRadius?: number; //基础点半径范围（将在此范围内随机生成）\n  amount?: number; //生成总数量（会均分到每个坐标点）\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/Level.ts","import { Ghost, GhostOptions } from '../core/sprite/Ghost';\nimport Utils from '../core/Utils';\nimport Player from '../players/Player';\n\n/**\n * [初级]ghost\n */\nclass Fresher extends Ghost {\n\n  constructor(player: Player, options: GhostOptions) {\n    super(player, Object.assign({ //默认配置\n      // game: game, \n      // x: 100, y: 100, key: 'Ghost.Fresher', frame: 'normal',\n      shadow: {\n        x: -75, y: -75,\n        // x: 0, y: 0,\n        key: 'GhostFresher',\n        frame: 'normal'\n      },\n      speed: Ghost.defaultRate * 0.6,\n      // lifeOptions: {\n      //   offset: { x: -30, y: -35 }\n      // },\n      // anchor: { x: 0, y: 0 },\n      // anchor: { x: 0.9, y: 1.1 },\n      bodySize: { width: 59, height: 75, offsetX: 0, offsetY: 0 }\n      // bodySize: { width: 150, height: 150, offsetX: 0, offsetY: 0 }\n    }, options));\n\n    //初始动画\n    // this.play('normal');\n//     this.playUpdown();\n// console.log('----fresher', this);\n    // super(game, game.world.randomX, game.world.randomY, 'Ghost.Fresher');\n    //test\n    // this.game.physics.arcade.moveToObject(this, player.body, 300);\n    // this.game.physics.arcade.accelerateToObject(this, player, 200);\n    \n  }\n\n  onBeforeMarch() {\n    this.playUpdown();\n  }\n  onAfterMarch() {\n    this.stopUpdown();\n  }\n\n  onBeforeAttack() {\n    this.game.audio.playEffect('fresher-attack-disappear');\n    this.shadow.play('attack');\n  }\n  onAfterAttack() {\n    this.alive = false; //直接静默式地死亡(不摧毁，后面手动摧毁)\n    console.log('-----onAfterAttack');\n    this.game.time.events.add(Phaser.Timer.HALF, () => { //等半秒后再消失摧毁\n      console.log('-----not occur');\n      this.playTween('disappear').onComplete.addOnce(() => this.destruct());\n    });\n  }\n\n  onBeforeHurt() {\n    super.onBeforeHurt();\n    return this.exPlay('hurt', true);\n  }\n\n  onBeforeDie() {\n    super.onBeforeDie();\n    return this.exPlay('die', true);\n  }\n  \n  initializeAnimations() {\n    let animations = this.shadow.animations, frameRate = Ghost.defaultRate;\n    //normal\n    animations.add('normal', ['normal']);\n    //attack\n    animations.add('attack', Utils.concatRepeat([], 'attack/1', 4, 'attack/2', 5, 'attack/3', 5, 'attack/4', 5, 'attack/5', 5, 'attack/6', 5, 'attack/7', 1), frameRate);\n    //hurt\n    let hurt = animations.add('hurt', Utils.concatRepeat([], 'hurt/1', 4, 'hurt/2', 5, 'hurt/3', 5, 'hurt/4', 5, 'hurt/5', 21), frameRate);\n    hurt.onComplete.add(() => animations.play('normal'));\n    //die\n    animations.add('die', Utils.concatRepeat([], 'die/1', 4, 'die/2', 5, 'die/3', 5, 'die/4', 5, 'die/5', 5, 'die/6', 5, 'die/7', 5, 'die/8', 5), frameRate);\n    //disappear（攻击完毕后消失）\n    this.createTween('disappear', true).to({ alpha: 0 }, 1000, 'Linear', false);\n    //updown上下游荡\n    let shadowY = this.shadow.y;\n    this.createTween('updown', true)\n      .to({ y: shadowY - 5 }, 500).to({ y: shadowY }, 500)\n      .to({ y: shadowY + 5 }, 500).to({ y: shadowY }, 500)\n      .loop();\n  }\n\n  playUpdown() { this.getTween('updown').start(); }\n  stopUpdown() { this.getTween('updown').pause(); }\n\n}\n\nexport default Fresher;\n\n\n// WEBPACK FOOTER //\n// ./src/ghosts/Fresher.ts","import { Sprite, SpriteOptions } from './Sprite';\nimport Player from '../../players/Player';\nimport { LifeFigure, LifeFigureValue, LifeFigureOptions } from '../../lib/LifeFigure';\n\n/**\n * ghost基类\n */\nabstract class Ghost extends Sprite {\n\n  private life: LifeFigure; //血条\n\n  protected player: Player;\n\n  constructor(player: Player, options: GhostOptions) {\n    options.maxHealth = options.lifeValues.length; //ghost的生命值等于血条长度\n    super(options);\n    //初始化\n    this.player = player;\n    this.life = new LifeFigure(this, options.lifeValues, options.lifeOptions);\n    //\b准备move到player\n    this.march();\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 对外api\n  -------------------------------------------------------------\n  */\n\n  //获得当前血块图形\n  getCurrentFigure(): LifeFigureValue|null {\n    return this.life.getCurrentFigure();\n  }\n\n  /*\n  -------------------------------------------------------------\n  | 内部流程\n  -------------------------------------------------------------\n  */\n\n  onBeforeHurt() {\n    this.life.reduceFigure();\n  }\n\n  //死亡\n  onBeforeDie() {\n    this.game.audio.playEffect('ghost-normal-die');\n  }\n\n  //向player移动\n  onBeforeMarch(): any {}\n  async march() {\n    if (false !== await this.onBeforeMarch()) {\n      await this.moveTo(this.player);\n      this.onAfterMarch();\n      //开始进行攻击\n      if (this.player.alive) {\n        this.attack();\n      }\n    }\n  }\n  onAfterMarch(): any {} //进军完成，已移动到指定位置\n\n  //发起一次攻击\n  onBeforeAttack(): any {}\n  async attack() {\n    await this.onBeforeAttack();\n    this.player.hurt();\n    console.log('-----hurt over');\n    await this.onAfterAttack();\n  }\n  onAfterAttack(): any {}\n\n}\n\n//ghost特有初始化配置\ninterface GhostOptions extends SpriteOptions {\n  lifeValues: LifeFigureValue[]; //血条值列表\n  lifeOptions?: LifeFigureOptions; //其他选项\n}\n\nexport default Ghost;\nexport { Ghost, GhostOptions };\n\n\n// WEBPACK FOOTER //\n// ./src/core/sprite/Ghost.ts"],"sourceRoot":""}